{"version":3,"sources":["views/Form/contact.png","views/Form/FirstPageFormInput.js","views/Form/ThirdPageFormInput.js","views/Form/SecondPageFormInput.js","components/H1/index.js","components/H4/index.js","components/Img/index.js","components/Section/index.js","components/CenteredSection/index.js","views/Form/index.js","views/Form/helperFunctions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FirstPageFormInput","handleChange","errors","register","className","name","placeholder","onChange","autoComplete","formNoValidate","ref","required","pattern","value","message","firstName","lastName","emailAddress","phoneNumber","companyName","ThirdPageFormInput","userInput","zipCodeObj","companyFacebookURL","companyInstagramUsername","companyTwitterUsername","zipCode","undefined","city","state","country","zip","length","SecondPageFormInput","id","defaultValue","description","services","companyURL","H1","styled","h1","H4","h4","props","color","Img","src","alt","style","Section","section","CenteredSection","height","SectionWrapper","div","paddingTop","globalErrors","Form","width","screenState","useForm","handleSubmit","useReducer","newState","category","modalFlag","loading","modalText","setUserInput","evt","target","useState","progressPercent","setCount","updateProgress","progress","Math","round","percentStatus","buttonText","validateFormInput","formInput","validateNoError","zipcodes","lookup","onFormSubmit","e","milliseconds","Promise","resolve","setTimeout","then","validateZipCode","preventDefault","imageMaxWidth","strokeWidth","handleCustomStylings","ContactDesign","maxHeight","maxWidth","percent","strokeColor","onSubmit","onClick","App","updateWindowDimensions","setState","window","innerWidth","innerHeight","this","addEventListener","removeEventListener","determineScreenState","React","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83451db0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/contact.a92bb7b6.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FirstPageFormInput = ({ handleChange, errors, register }) => (\n  <ul className=\"form-style-1\">\n    <li>\n      {/* <form> */}\n      <input\n        name=\"firstName\"\n        className=\"field-divided\"\n        placeholder=\"First Name\"\n        onChange={handleChange}\n        autoComplete={\"off\"}\n        formNoValidate\n        ref={register({\n          required: 'Required',\n          pattern: {\n            value: /^(?=.{1,50}$)[a-z]+(?:['_.\\s][a-z]+)*$/i,\n            message: \"Use a real first name\"\n          }\n        })}\n      />\n      {/* </form> */}\n      <br/><b>{errors.firstName && errors.firstName.message}</b>\n\n    </li>\n    <li>\n      <input\n        name=\"lastName\"\n        className=\"field-divided\"\n        placeholder=\"Last Name\"\n        onChange={handleChange}\n        formNoValidate\n        ref={register({\n          required: 'Required',\n          pattern: {\n            value: /^(?=.{1,50}$)[a-z]+(?:['_.\\s][a-z]+)*$/i,\n            message: \"Use a real last name\"\n          }\n        })}\n      />\n      <br/><b>{errors.lastName && errors.lastName.message}</b>\n\n    </li>\n    <li>\n      <input\n        name=\"emailAddress\"\n        className=\"field-divided\"\n        placeholder=\"Email Address\"\n        onChange={handleChange}\n        formNoValidate\n        ref={register({\n          required: 'Required',\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n            message: \"Invalid email address\"\n          }\n        })}\n      />\n      <br/><b>{errors.emailAddress && errors.emailAddress.message}</b>\n\n    </li>\n    <li>\n      <input\n        name=\"phoneNumber\"\n        className=\"field-divided\"\n        placeholder=\"Phone Number\"\n        onChange={handleChange}\n        formNoValidate\n        ref={register({\n          pattern: {\n            value: /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im,\n            message: \"Invalid phone number\"\n          }\n        })}\n      />\n      <br/><b>{errors.phoneNumber && errors.phoneNumber.message}</b>\n\n    </li>\n    <li>\n      <input\n        name=\"companyName\"\n        className=\"field-divided\"\n        placeholder=\"Company Name\"\n        onChange={handleChange}\n        formNoValidate\n        ref={register({\n          required: 'Required',\n          pattern: {\n            value: /^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+/,\n            message: \"Invalid company name\"\n          }\n        })}\n      />\n      <br /><b>{errors.companyName && errors.companyName.message}</b>\n    </li>\n  </ul>          \n)\n\nFirstPageFormInput.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired\n}\n\nexport default FirstPageFormInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ThirdPageFormInput = ({ userInput, handleChange, errors, register, zipCodeObj }) => (\n  <ul className=\"form-style-1\">\n    <br />\n    <b>{userInput.companyName}</b>\n    <li>\n      <input\n        name=\"companyFacebookURL\"\n        className=\"field-long\"\n        placeholder=\"Company Facebook Link\"\n        onChange={handleChange}\n        formNoValidate\n        ref={register({\n          pattern: {\n            value: /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/,\n            message: \"Invalid Facebook Link\"\n          }\n        })}\n      />\n      <br/><b>{errors.companyFacebookURL && errors.companyFacebookURL.message}</b>\n    </li>\n    <li>\n      <input\n        name=\"companyInstagramUsername\"\n        className=\"field-long\"\n        placeholder=\"Company Instagram Username\"\n        onChange={handleChange}\n        formNoValidate\n        ref={register({\n          pattern: {\n            value: /[a-z]\\d?/gi,\n            message: \"Invalid Instagram username\"\n          }\n        })}\n      />\n      <br/><b>{errors.companyInstagramUsername && errors.companyInstagramUsername.message}</b>\n    </li>\n    <li>\n      <input\n        name=\"companyTwitterUsername\"\n        className=\"field-long\"\n        placeholder=\"Company Twitter Username\"\n        onChange={handleChange}\n        formNoValidate\n        ref={register({\n          pattern: {\n            value: /[a-z]\\d?/gi,\n            message: \"Invalid Twitter username\"\n          }\n        })}\n      />\n      <br/><b>{errors.companyTwitterUsername && errors.companyTwitterUsername.message}</b>\n    </li>\n    <li>\n      <form>\n      <input\n        name=\"zipCode\"\n        placeholder=\"Zip Code\"\n        onChange={handleChange}\n        formNoValidate\n        autoComplete={\"off\"}\n        ref={register({\n          required: 'Required',\n          pattern: {\n            value: /^\\d{5}$|^\\d{5}-\\d{4}$/,\n            message: \"Invalid Zip Code\"\n          }\n        })}\n      />\n      </form>\n      {errors.zipCode ?\n        <b>{errors.zipCode.message}</b>\n        :\n        ((zipCodeObj !== undefined) && ('city' in zipCodeObj) && ('state' in zipCodeObj)) ?\n          <p className=\"center-p\">{zipCodeObj.city}, {zipCodeObj.state} {zipCodeObj.country} </p>\n          :\n          (zipCodeObj !== undefined && 'zip' in zipCodeObj && zipCodeObj.zip.length === 5) ?\n          <b>Invalid Zip Code</b>\n          :\n          (zipCodeObj === undefined && userInput.zipCode.length === 5) ?\n            <b>Invalid US Zip Code</b>\n            :\n            null\n      }\n    </li>\n  </ul>\n)\n\nThirdPageFormInput.propTypes = {\n  userInput: PropTypes.object.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  zipCodeObj: PropTypes.object.isRequired\n}\n\nexport default ThirdPageFormInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SecondPageFormInput = ({ userInput, handleChange, errors, register }) => (\n  <ul className=\"form-style-1\">\n    <br />\n    <b>{userInput.companyName}</b>\n    <li>\n      <p className=\"field-divided\">Category</p>\n      <select\n        id=\"select\"\n        name=\"category\"\n        className=\"field-divided\"\n        defaultValue=\"Technology\"\n        onChange={handleChange}\n      >\n        <option value=\"Construction\">Construction</option>\n        <option value=\"Cosmetics\">Cosmetics</option>\n        <option value=\"Entertainment\">Entertainment</option>\n        <option value=\"Food and Drinks\">Food and Drinks</option>\n        <option value=\"Health Care\">Health Care</option>\n        <option value=\"Marketing\">Marketing</option>\n        <option value=\"Restaurant\">Restaurant</option>\n        <option value=\"Real Estate\">Real Estate</option>\n        <option value=\"Technology\">Technology</option>\n        <option value=\"Other\">Other</option>\n      </select>\n    </li>\n    <li>\n      <textarea\n        name=\"description\"\n        className=\"field-long field-textarea\"\n        placeholder=\"Brief Company Description\"\n        // value={userInput.description}\n        onChange={handleChange}\n        formNoValidate\n        ref={register({ required: 'Required' })}\n      />\n      <br/><b>{errors.description && errors.description.message}</b>\n    </li>\n    <li>\n      <input\n        name=\"services\"\n        className=\"field-long\"\n        placeholder=\"Your Company's Services (i.e. haircuts, real estate, software development, construction)\"\n        onChange={handleChange}\n        formNoValidate\n        ref={register({ required: 'Required' })}\n      />\n      <br/><b>{errors.services && errors.services.message}</b>\n\n    </li>\n    <li>\n      <input\n        name=\"companyURL\"\n        className=\"field-long\"\n        placeholder=\"Company Website (www.companywebsite.com)\"\n        onChange={handleChange}\n        formNoValidate\n        ref={register({\n          pattern: {\n            value: /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/,\n            message: \"Invalid URL\"\n          }\n        })}\n      />\n      {/* <LongInput\n        name={companyURL}\n        placeholder={\"\"}\n        onChange={handleChange}\n        register={register}\n        value={/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[\\-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9\\.\\-]+|(?:www\\.|[\\-;:&=\\+\\$,\\w]+@)[A-Za-z0-9\\.\\-]+)((?:\\/[\\+~%\\/\\.\\w\\-_]*)?\\??(?:[\\-\\+=&;%@\\.\\w_]*)#?(?:[\\.\\!\\/\\\\\\w]*))?)/}\n        message={\"Invalid URL\"}\n        // required={true} //default to false\n      /> */}\n\n      <br/><b>{errors.companyURL && errors.companyURL.message}</b>\n    </li>\n  </ul>\n)\n\nSecondPageFormInput.propTypes = {\n  userInput: PropTypes.object.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired\n}\n\nexport default SecondPageFormInput;\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  font-size: 2em;\n  margin-bottom: 0.25em;\n  margin-left: 5vw;\n  margin-right: 5vw;\n`;\n\nexport default H1;\n","// /* eslint-disable jsx-a11y/heading-has-content */\n// import React from 'react';\n\n// function H4(props) {\n//   return <h4 {...props.style, {asdf: 'asd'}}  />;\n// }\n\n// export default H4;\n\nimport styled from 'styled-components';\n\nconst H4 = styled.h4`\n  color: ${props => props.color};\n\n`;\n\nexport default H4;\n","/**\n *\n * Img.js\n *\n * Renders an image, enforcing the usage of the alt=\"\" tag\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Img(props) {\n  return (\n    <img\n      className={props.className}\n      src={props.src}\n      alt={props.alt}\n      style={props.style}\n    />\n  );\n}\n\n// We require the use of src and alt, only enforced by react in dev mode\nImg.propTypes = {\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  style: PropTypes.object,\n};\n\nexport default Img;\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  margin: 0em auto;\n\n  &:first-child {\n    margin-top: 0;\n  }\n`;\n\nexport default Section;\n","import styled from 'styled-components';\nimport Section from '../Section';\n\nconst CenteredSection = styled(Section)`\n  text-align: center;\n  height: ${props => props.height}px;\n`;\n\nexport default CenteredSection;\n","import React, { useReducer, useState } from 'react';\n\nimport zipcodes from 'zipcodes';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\nimport Modal from 'react-responsive-modal';\n\nimport { Line } from 'rc-progress';\nimport { useForm } from \"react-hook-form\";\n\nimport ContactDesign from './contact.png';\nimport FirstPageFormInput from './FirstPageFormInput';\nimport ThirdPageFormInput from './ThirdPageFormInput';\nimport SecondPageFormInput from './SecondPageFormInput';\n\nimport H1 from '../../components/H1';\nimport H4 from '../../components/H4';\nimport Img from '../../components/Img';\nimport CenteredSection from '../../components/CenteredSection';\n\nimport { sleep, sendEmail, handleCustomStylings, validateZipCode } from './helperFunctions';\n\nimport './styles.css';\n\nconst SectionWrapper = styled.div`\n  padding: 0;\n  margin: 0;\n  padding-top: ${props => props.paddingTop};\n  text-align: center;\n`;\n\n// Issue with form submit that holds onto the previous version of errors so globalErrors is used to stay uop to date with rerenders\nlet globalErrors = undefined;\n\nconst Form = ({ id, width, height, screenState }) => {\n  const { handleSubmit, register, errors } = useForm();\n\n  globalErrors = errors;\n\n  const [userInput, setUserInput] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      category: 'Other',\n      modalFlag: false,\n      loading: false,\n      modalText: ''\n    },\n  );\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    setUserInput({ [name]: value });\n  };\n\n  let [progressPercent, setCount] = useState(0);\n  const updateProgress = (progress) => {\n    if (progress === \"forward\") setCount(progressPercent + Math.round(5/15 * 100))\n    else if (progress === \"reverse\" ) setCount(progressPercent - Math.round(5/15 * 100))\n  }\n\n  let [percentStatus, buttonText] = [\"first\", \"Next\"];\n  if (progressPercent === 33) { percentStatus = \"second\"; }\n  else if (progressPercent === 66) { percentStatus = \"third\"; }\n  else if (progressPercent === 100) {\n    progressPercent += 1\n    percentStatus = \"done\";\n    buttonText = \"Done!\"\n    // TODO: make API call\n  }\n\n  const openModal = () => { setUserInput({ modalFlag: true }); };\n\n  const closeModal = () => { setUserInput({ modalFlag: false }); };\n\n  const validateFormInput = (formInput) => {\n    return (\n      formInput in userInput &&\n      userInput[formInput] !== '' &&\n      !(formInput in globalErrors)\n    )\n  }\n\n  const validateNoError = (formInput) => { return !(formInput in errors) }\n\n  const zipCodeObj = zipcodes.lookup(userInput.zipCode);\n\n  const onFormSubmit = e => {\n    // Sleep half a second for nice UX & to wait for globalErrors to be updated\n    sleep(500).then(() => {\n      if (\n        validateNoError('companyFacebookURL') &&\n        validateNoError('companyInstagramURL') &&\n        validateNoError('companyTwitterURL') &&\n        validateFormInput('zipCode') &&\n        validateZipCode(zipCodeObj) &&\n        percentStatus === \"third\"\n      ) {\n        updateProgress(\"forward\");\n        e.preventDefault();\n        return;\n      }\n\n      if (\n        validateFormInput('description') &&\n        validateFormInput('services') &&\n        validateFormInput('category') &&\n        percentStatus === \"second\"\n      ) {\n        updateProgress(\"forward\");\n        e.preventDefault();\n        return;\n      }\n\n      if (\n        validateFormInput('firstName') &&\n        validateFormInput('lastName') &&\n        validateFormInput('emailAddress') &&\n        validateNoError('phoneNumber') &&\n        validateFormInput('companyName') &&\n        percentStatus === \"first\"\n      ) {\n        updateProgress(\"forward\");\n        e.preventDefault();\n        return;\n      }\n\n      return;\n      setUserInput({ loading: true });\n      // sendEmail(userInput).then(({ success }) => {\n      //   setUserInput({ loading: false });\n      //   openModal();\n      //   if (success) {\n      //     setUserInput({ modalText: 'Email successfully sent!' });\n      //   } else {\n      //     setUserInput({\n      //       modalText: 'Email was not sent out...try again later.',\n      //     });\n      //   }\n      // });\n    })\n  }\n\n  let {imageMaxWidth, paddingTop, strokeWidth} = handleCustomStylings(screenState, width);\n\n  return (\n    <SectionWrapper id={id} paddingTop={paddingTop}>\n      <CenteredSection height={height}>\n        <H1>United Dreamers</H1>\n        <H4>Supporting each other as DACA recipients</H4>\n        <Img\n          className=\"no-margin\"\n          src={ContactDesign}\n          alt=\"Yeux_contact_image\"\n          style={{\n            maxHeight: height,\n            maxWidth: imageMaxWidth,\n            width: 'auto',\n            height: 'auto',\n          }}\n        />\n        <Line percent={progressPercent} strokeWidth={strokeWidth} strokeColor=\"#88D5E9\" className=\"progress-bar\" />\n        <form onSubmit={handleSubmit()}>\n          {\n            percentStatus === \"first\" && \n              <FirstPageFormInput \n                handleChange={handleChange}\n                register={register}\n                errors={errors}\n              />\n          }\n          {\n            percentStatus === \"second\" &&\n              <SecondPageFormInput\n                userInput={userInput}\n                handleChange={handleChange}\n                register={register}\n                errors={errors}\n              />\n          }\n            {percentStatus === \"third\" && \n              <ThirdPageFormInput\n                zipCodeObj={zipCodeObj}\n                userInput={userInput}\n                handleChange={handleChange}\n                register={register}\n                errors={errors}\n              />\n          }\n          <br />\n          <button onClick={(e) => onFormSubmit(e, errors)}>{buttonText}</button>\n        </form>\n      </CenteredSection>\n    </SectionWrapper>\n  );\n};\n\nexport default Form;\n","const sendEmail = async ({ name, emailAddress, subject, message }) => {\n  try {\n    const resp = await fetch(\n      'https://blooming-beyond-72124.herokuapp.com/api/send_email',\n      {\n        mode: 'cors',\n        method: 'POST',\n        body: JSON.stringify({ name, emailAddress, subject, message }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n\n    return resp.json();\n  } catch (e) {\n    return { success: false };\n  }\n};\n\nconst handleCustomStylings = (screenState, width) => {\n  let [imageMaxWidth, paddingTop, strokeWidth] = [0, \"\", 1];\n  if (screenState === \"wide\") {\n    imageMaxWidth = width * 0.5;\n    paddingTop = \"1vh\";\n    strokeWidth = 0.5\n  } else if (screenState === \"full\") {\n    imageMaxWidth = width * 0.35;\n    paddingTop = \"1vh\";\n    strokeWidth = 0.6\n  } else if (screenState === \"pacman\") {\n    imageMaxWidth = width * 0.5;\n    paddingTop = \"1vh\";\n    strokeWidth = 0.75;\n  } else if (screenState === \"half\") {\n    imageMaxWidth = width * 0.6;\n    paddingTop = \"7.5vh\";\n    strokeWidth = 0.9\n  } else if (screenState === \"mobile\") {\n    imageMaxWidth = width * 0.8;\n    paddingTop = \"3vh\";\n    strokeWidth = 1.5\n  }\n  return {imageMaxWidth, paddingTop, strokeWidth}\n}\n\nconst validateZipCode = (zipCodeObj) => { \n  return (\n    zipCodeObj !== undefined &&\n    'city' in zipCodeObj &&\n    'state' in zipCodeObj\n  )\n}\n\nconst sleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nexport {\n  sleep,\n  sendEmail,\n  handleCustomStylings,\n  validateZipCode\n};\n","import React from 'react';\nimport './App.css';\n// import Form from './views/Form';\nimport Form from './views/Form/index';\n\nconst determineScreenState = (width) => {\n  if (width > 1500) {\n    return \"wide\";\n  } else if (width > 1200) {\n    return \"full\";\n  } else if (width > 900) {\n    return \"pacman\";\n  } else if (width > 700) {\n    return \"half\";\n  }\n  return \"mobile\";\n}\n\nclass App extends React.Component {\n  state = {\n    height: 0,\n    width: 0,\n  };\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => { this.setState({ width: window.innerWidth, height: window.innerHeight }) };\n\n  componentWillUnmount() { window.removeEventListener('resize', this.updateWindowDimensions); }\n\n  render() {\n    const { height, width } = this.state;\n    const screenState = determineScreenState(width);\n    const props = { height, width, screenState };\n\n    return (\n      <div className=\"App\">\n        <Form {...props}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}